//INT 16 - user Management
breakpoint;
alias userSP R1;
userSP = SP;

alias currPID R2;
currPID = [SYSTEM_STATUS_TABLE + 1];

alias procTab R3;
procTab = PROCESS_TABLE + currPID*16;

[procTab + 13] = SP;
SP = [procTab + 11]*512 -1;

alias syscall R4;
R11 = (userSP -5);
call stkval;
syscall = R11;

[procTab + 9] = syscall;

if(syscall == 22) then
  if([SYSTEM_STATUS_TABLE] != 1 || currPID != 2) then
    R11 = -2;
    goto retLabel;
  endif;

  alias userName R5; 
  alias password R6;

  R11 = (userSP-4);
  call stkval;
  userName = R11;
  R11 = (userSP-3);
  call stkval;
  password = R11;

  alias i R7;
  i = 1;

  while(i<MAX_USER_NUM) do
    if([USER_TABLE + 2*i] == userName) then
      R11 = -1;
      goto retLabel;
    endif;
  i = i + 1;
  endwhile;

  i = 1;
  while(i<MAX_USER_NUM) do
    if([USER_TABLE + 2*i] == -1) then
      break;
    endif;
  i = i + 1;
  endwhile;

  if(i == MAX_USER_NUM) then
    R11 = -3;
    goto retLabel;
  endif;

  encrypt password;

  [USER_TABLE + 2*i] = userName;
  [USER_TABLE + 2*i + 1]  = password;

  R11 = 0;
  goto retLabel;

endif;

if(syscall == 23) then
  if([SYSTEM_STATUS_TABLE] != 1 || currPID != 2) then
    R11 = -2;
    goto retLabel;
  endif;

  alias userName R5;

  R11 = (userSP-4);
  call stkval;
  userName = R11;

  alias i R6;
  i = 1;

  if(userName == "root" || userName == "kernel") then
    R11 = -2;
    goto retLabel;
  endif;

  while(i<MAX_USER_NUM) do
    if([USER_TABLE + 2*i] == userName) then
      break;
    endif;
  i = i + 1;
  endwhile;

  if(i == MAX_USER_NUM) then
    R11 = -1;
    goto retLabel;
  endif;
 
  alias userId R7;
  userId = i;

  i = 0;
  while(i<MAX_FILE_NUM) do
    if([ROOT_FILE + 8*i + 3] == userName) then
      R11 = -3;
      goto retLabel;
    endif;
  i = i + 1;
  endwhile;

  [USER_TABLE + 2*userId] = -1;
  [USER_TABLE + 2*userId + 1] = -1;

  goto retLabel;

endif;

if(syscall == 24) then
 if(currPID != 2) then
    R11 = -1;
    goto retLabel;
  endif;
  
  
  
  alias userName R5;
  alias password R6;

  R11 = (userSP-4);
  call stkval;
  userName = R11;
  R11 = (userSP-3);
  call stkval;
  password = R11;
  breakpoint;
  alias i R7;
  i = 1;
  while(i<MAX_USER_NUM) do
    if([USER_TABLE + 2*i] == userName) then
      break;
    endif;
  i = i + 1;
  endwhile;
  
  if(i==MAX_USER_NUM) then
    R11 = -2;
    goto retLabel;
  endif;

  if(i != [procTab + 3]) then
    if([procTab + 3] != 1) then
      R11 = -1;
      goto retLabel;
    endif;
  endif;

  encrypt R6;
  
  [USER_TABLE + 2*i + 1] = password;
  goto retLabel;

endif;


if(syscall == 26) then
  alias userName R5;
  R11 = (userSP-4);
  call stkval;
  userName = R11;


  alias i R6;
  i = 0;
  while(i<MAX_USER_NUM) do
    if([USER_TABLE + 2*i] == userName) then
      R11 = i;
      goto retLabel;
    endif;
  i = i + 1;
  endwhile;

  R11 = -1;
  goto retLabel;

endif;

if(syscall == 25) then
  alias uid R5;
  R11 = (userSP - 4);
  call stkval;
  uid = R11;
 
  if(uid<0 || uid>(MAX_USER_NUM-1)) then
    R11 = -1;
    goto retLabel;
  endif;

  if([USER_TABLE + 2*uid] == -1) then
    R11 = -1;
    goto retLabel;
  endif;

  alias userName R6;
  userName = [USER_TABLE + 2*uid];
  R11 = userName;
  goto retLabel;

endif;

stkval:
  R11 = [[PTBR + 2*(R11)/512]*512 + (R11)%512];
  return;

retLabel:
  [[PTBR + 2*(userSP-1)/512]*512 + (userSP-1)%512] = R11;
  SP = userSP;
  [procTab + 9] = 0;
  ireturn;